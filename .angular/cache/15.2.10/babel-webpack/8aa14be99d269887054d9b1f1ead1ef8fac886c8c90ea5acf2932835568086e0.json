{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet SigninComponent = class SigninComponent {\n  constructor(router, userService, auth) {\n    this.router = router;\n    this.userService = userService;\n    this.auth = auth;\n    this.showLogin = false;\n    this.SignUpUsers = [];\n    this.localData = '';\n    this.dataParse = '';\n    this.LogInUsers = [];\n  }\n  ngOnInit() {\n    this.createRegistrationForm();\n  }\n  openlogin() {\n    this.showLogin = true;\n  }\n  openSignup() {\n    this.showLogin = false;\n  }\n  signUp(data) {\n    this.SignUpUsers.push(data);\n    localStorage.setItem('SignUpUsers', JSON.stringify(this.SignUpUsers));\n    this.localData = localStorage.getItem('SignUpUsers');\n    if (this.localData !== null) {\n      this.SignUpUsers = JSON.parse(this.localData);\n    }\n  }\n  logIn(data) {\n    this.LogInUsers.push(data);\n    localStorage.setItem('logInUsers', JSON.stringify(this.LogInUsers));\n    this.dataParse = localStorage.getItem('logInUsers');\n    if (this.dataParse !== null) {\n      this.LogInUsers = JSON.parse('logInUsers');\n    }\n  }\n  createRegistrationForm() {\n    this.signForm = new FormGroup({\n      \"firstName\": new FormControl('', [Validators.required, Validators.minLength(2), Validators.maxLength(10), Validators.pattern(\"[a-zA-Z]{2,10}\")]),\n      \"email\": new FormControl('', Validators.required, [])\n    });\n  }\n  save() {\n    console.log(\"form data\", this.signForm.value);\n  }\n  get firstName() {\n    return this.signForm.controls['firstName'];\n  }\n  get email() {\n    return this.signForm.controls['email'];\n  }\n};\nSigninComponent = __decorate([Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})], SigninComponent);\nexport { SigninComponent };\nclass signUp {}\nclass logIn {}","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAU5D,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAE1BC,YACUC,MAAc,EACdC,WAAwB,EACxBC,IAAe;IAFf,WAAM,GAANF,MAAM;IACN,gBAAW,GAAXC,WAAW;IACX,SAAI,GAAJC,IAAI;IAKd,cAAS,GAAY,KAAK;IAC1B,gBAAW,GAAU,EAAE;IAEvB,cAAS,GAAkB,EAAE;IAC7B,cAAS,GAAkB,EAAE;IAE7B,eAAU,GAAU,EAAE;EAVnB;EACHC,QAAQ;IACN,IAAI,CAACC,sBAAsB,EAAE;EAC/B;EAUAC,SAAS;IACP,IAAI,CAACC,SAAS,GAAG,IAAI;EACvB;EAEAC,UAAU;IACR,IAAI,CAACD,SAAS,GAAG,KAAK;EACxB;EACAE,MAAM,CAACC,IAAY;IACjB,IAAI,CAACC,WAAW,CAACC,IAAI,CAACF,IAAI,CAAC;IAC3BG,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACL,WAAW,CAAC,CAAC;IACrE,IAAI,CAACM,SAAS,GAAGJ,YAAY,CAACK,OAAO,CAAC,aAAa,CAAC;IACpD,IAAI,IAAI,CAACD,SAAS,KAAK,IAAI,EAAE;MAC3B,IAAI,CAACN,WAAW,GAAGI,IAAI,CAACI,KAAK,CAAC,IAAI,CAACF,SAAS,CAAC;;EAGjD;EAGAG,KAAK,CAACV,IAAW;IACf,IAAI,CAACW,UAAU,CAACT,IAAI,CAACF,IAAI,CAAC;IAE1BG,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACK,UAAU,CAAC,CAAC;IACnE,IAAI,CAACC,SAAS,GAAGT,YAAY,CAACK,OAAO,CAAC,YAAY,CAAC;IACnD,IAAI,IAAI,CAACI,SAAS,KAAK,IAAI,EAAE;MAC3B,IAAI,CAACD,UAAU,GAAGN,IAAI,CAACI,KAAK,CAAC,YAAY,CAAC;;EAE9C;EACAd,sBAAsB;IACpB,IAAI,CAACkB,QAAQ,GAAG,IAAI1B,SAAS,CAAC;MAC5B,WAAW,EAAC,IAAID,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAAC0B,QAAQ,EAAC1B,UAAU,CAAC2B,SAAS,CAAC,CAAC,CAAC,EAAC3B,UAAU,CAAC4B,SAAS,CAAC,EAAE,CAAC,EAAC5B,UAAU,CAAC6B,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;MAC3I,OAAO,EAAC,IAAI/B,WAAW,CAAC,EAAE,EAACE,UAAU,CAAC0B,QAAQ,EAAC,EAAE;KAElD,CAAC;EACJ;EACAI,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAC,IAAI,CAACP,QAAQ,CAACQ,KAAK,CAAC;EAC9C;EAEA,IAAIC,SAAS;IACX,OAAO,IAAI,CAACT,QAAQ,CAACU,QAAQ,CAAC,WAAW,CAAC;EAE5C;EACA,IAAIC,KAAK;IACP,OAAO,IAAI,CAACX,QAAQ,CAACU,QAAQ,CAAC,OAAO,CAAC;EACxC;CACD;AAhEYlC,eAAe,eAL3BJ,SAAS,CAAC;EACTwC,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,GACWtC,eAAe,CAgE3B;SAhEYA,eAAe;AAkE5B,MAAMU,MAAM;AAOZ,MAAMW,KAAK","names":["Component","FormControl","FormGroup","Validators","SigninComponent","constructor","router","userService","auth","ngOnInit","createRegistrationForm","openlogin","showLogin","openSignup","signUp","data","SignUpUsers","push","localStorage","setItem","JSON","stringify","localData","getItem","parse","logIn","LogInUsers","dataParse","signForm","required","minLength","maxLength","pattern","save","console","log","value","firstName","controls","email","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Kituuu\\Task\\manager\\src\\app\\signin\\signin.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Route, Router } from '@angular/router';\nimport { AuthGuard } from '../auth.guard';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css'],\n})\nexport class SigninComponent implements OnInit {\n  signForm!: FormGroup\n  constructor(\n    private router: Router,\n    private userService: UserService,\n    private auth: AuthGuard\n  ) {}\n  ngOnInit(): void {\n    this.createRegistrationForm();\n  }\n  showLogin: boolean = false;\n  SignUpUsers: any[] = [];\n  signUpForm!: signUp;\n  localData: string | null = '';\n  dataParse: string | null = '';\n\n  LogInUsers: any[] = [];\n  loginForm!: logIn;\n\n  openlogin() {\n    this.showLogin = true;\n  }\n\n  openSignup() {\n    this.showLogin = false;\n  }\n  signUp(data: signUp) {\n    this.SignUpUsers.push(data);\n    localStorage.setItem('SignUpUsers', JSON.stringify(this.SignUpUsers));\n    this.localData = localStorage.getItem('SignUpUsers');\n    if (this.localData !== null) {\n      this.SignUpUsers = JSON.parse(this.localData);\n      \n    }\n  }\n  \n\n  logIn(data: logIn) {\n    this.LogInUsers.push(data);\n\n    localStorage.setItem('logInUsers', JSON.stringify(this.LogInUsers));\n    this.dataParse = localStorage.getItem('logInUsers');\n    if (this.dataParse !== null) {\n      this.LogInUsers = JSON.parse('logInUsers');\n    }\n  }\n  createRegistrationForm(){\n    this.signForm = new FormGroup({\n      \"firstName\":new FormControl('',[Validators.required,Validators.minLength(2),Validators.maxLength(10),Validators.pattern(\"[a-zA-Z]{2,10}\")]),\n      \"email\":new FormControl('',Validators.required,[]),\n\n    })\n  }\n  save(){\n    console.log(\"form data\",this.signForm.value);\n  }\n\n  get firstName (){\n    return this.signForm.controls['firstName'];\n\n  }\n  get email (){\n    return this.signForm.controls['email']\n  }\n}\n\nclass signUp {\n  name!: string;\n  email!: string;\n  password!: string;\n  get: any;\n  controls: any;\n}\nclass logIn {\n  email!: string;\n  password!: string;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}