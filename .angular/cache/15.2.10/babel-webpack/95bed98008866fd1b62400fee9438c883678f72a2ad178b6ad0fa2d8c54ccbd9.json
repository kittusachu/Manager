{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/user.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(auth, router) {\n    this.auth = auth;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (this.auth.IsloggedIn()) {\n      return false;\n    }\n    this.router.navigate(['/task-list']);\n    return true;\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.UserService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,IAAgB,EAASC,MAAa;IAAtC,SAAI,GAAJD,IAAI;IAAqB,WAAM,GAANC,MAAM;EAAS;EAC5DC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IACxB,IAAG,IAAI,CAACJ,IAAI,CAACK,UAAU,EAAE,EAAC;MACxB,OAAO,KAAK;;IAGd,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;IACpC,OAAO,IAAI;EACf;EAAC;qBAXUR,SAAS;EAAA;EAAA;WAATA,SAAS;IAAAS,SAATT,SAAS;IAAAU,YAFR;EAAM","names":["AuthGuard","constructor","auth","router","canActivate","route","state","IsloggedIn","navigate","factory","providedIn"],"sourceRoot":"","sources":["D:\\Kituuu\\Task\\manager\\src\\app\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from './services/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private auth:UserService,private router:Router){}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if(this.auth.IsloggedIn()){\n        return false;\n \n      }\n      this.router.navigate(['/task-list'])\n      return true\n  }\n }\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}